name: Deploy to Yandex Cloud

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_EC2_METADATA_DISABLED: "true"
      AWS_REGION: ru-central1
      AWS_DEFAULT_REGION: ru-central1

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          VITE_SIGN_URL: ${{ vars.YANDEX_CLOUD_FUNCTION_SIGN }}
          VITE_COMMIT_URL: ${{ vars.YANDEX_CLOUD_FUNCTION_COMMIT }}
          VITE_ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

      - name: Deploy to Yandex Object Storage
        run: aws s3 sync dist s3://${{ vars.S3_BUCKET }} --endpoint-url=https://storage.yandexcloud.net --delete --exclude "registry.json" --exclude "CONTENT/*"
        env:
          S3_BUCKET: ${{ vars.S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.YC_S3_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_S3_SECRET }}
          AWS_EC2_METADATA_DISABLED: "true"

      # ⬇️ создаём HTML-редиректы (meta+JS) на главную после sync
      - name: Create marketing redirects (HTML meta+JS)
        shell: bash
        run: |
          set -euo pipefail
          ENDPOINT="https://storage.yandexcloud.net"
          TARGET="https://www.hanifamarket.ru/"
          HTML='<!doctype html><meta charset="utf-8">
          <title>Redirecting…</title>
          <link rel="canonical" href="'$TARGET'">
          <meta http-equiv="refresh" content="0; url='$TARGET'">
          <a href="'$TARGET'">Redirecting…</a>
          <script>location.replace("'$TARGET'");</script>'

          # добавляй сюда новые слаги по мере необходимости
          for p in meaf anomia looksmaxx MEAF ANOMIA LOOKSMAXX; do
            # /brand  (без слеша)
            printf "%s" "$HTML" | aws s3 cp - "s3://${S3_BUCKET}/${p}" \
              --content-type "text/html; charset=utf-8" \
              --cache-control "no-cache, no-store, must-revalidate" \
              --endpoint-url "$ENDPOINT"

            # /brand/  (index.html)
            printf "%s" "$HTML" | aws s3 cp - "s3://${S3_BUCKET}/${p}/index.html" \
              --content-type "text/html; charset=utf-8" \
              --cache-control "no-cache, no-store, must-revalidate" \
              --endpoint-url "$ENDPOINT"
          done
        env:
          S3_BUCKET: ${{ vars.S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.YC_S3_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.YC_S3_SECRET }}
          AWS_EC2_METADATA_DISABLED: "true"
